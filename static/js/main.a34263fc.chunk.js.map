{"version":3,"sources":["components/TabsList/TabsList.tsx","api/tabsfromserver.ts","pages/TabsPage/TabsPage.tsx","App.tsx","index.tsx"],"names":["TabsList","tabs","selectedTabId","isSelected","find","tab","id","className","map","cn","to","title","content","tabsfromserver","TabsPage","useParams","tabId","App","isActive","path","element","replace","index","ReactDOM","render","document","getElementById"],"mappings":"yPASaA,EAA4B,SAAC,GAGnC,IAFLC,EAEI,EAFJA,KACAC,EACI,EADJA,cAEMC,EAAaF,EAAKG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOJ,KAE/C,OACE,qCACE,qBAAKK,UAAU,gBAAf,SACE,6BACGN,EAAKO,KAAI,SAAAH,GAAG,OACX,oBACE,UAAQ,MACRE,UAAWE,IAAG,CACZ,YAAaP,IAAkBG,EAAIC,KAHvC,SAME,cAAC,IAAD,CAAMI,GAAE,gBAAWL,EAAIC,IAAvB,SACGD,EAAIM,iBAMI,UAAlBT,EACC,kDAEA,mCAAIC,QAAJ,IAAIA,OAAJ,EAAIA,EAAYS,cCpCXC,EAAiB,CAC5B,CAAEP,GAAI,QAASK,MAAO,QAASC,QAAS,eACxC,CAAEN,GAAI,QAASK,MAAO,QAASC,QAAS,eACxC,CAAEN,GAAI,QAASK,MAAO,QAASC,QAAS,gBCE7BE,EAAqB,WAChC,MAA4BC,cAApBC,aAAR,MAAgB,QAAhB,EAEA,OACE,qCACE,oBAAIT,UAAU,QAAd,uBAEA,cAAC,EAAD,CACEN,KAAMY,EACNX,cAAec,QCFVC,EAAgB,WAC3B,OACE,qCAEE,qBACEV,UAAU,oDACV,UAAQ,MAFV,SAIE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CACEG,GAAG,IACHH,UAAW,gBAAGW,EAAH,EAAGA,SAAH,OAAkBT,IAAG,cAAe,CAC7C,YAAaS,KAHjB,kBAQA,cAAC,IAAD,CACER,GAAG,QACHH,UAAW,gBAAGW,EAAH,EAAGA,SAAH,OAAkBT,IAAG,cAAe,CAC7C,YAAaS,KAHjB,yBAYN,qBAAKX,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEY,KAAK,IACLC,QAAS,oBAAIb,UAAU,QAAd,yBAEX,cAAC,IAAD,CAAOY,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAUV,GAAG,IAAIW,SAAO,MACpD,eAAC,IAAD,CAAOF,KAAK,OAAZ,UACE,cAAC,IAAD,CAAOG,OAAK,EAACF,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,EAAD,SAEhC,cAAC,IAAD,CACED,KAAK,IACLC,QAAS,oBAAIb,UAAU,QAAd,yCCpDvBgB,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a34263fc.chunk.js","sourcesContent":["import cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Tab } from '../../types/Tab';\n\ninterface Props {\n  tabs: Tab[];\n  selectedTabId: string;\n}\n\nexport const TabsList: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n}) => {\n  const isSelected = tabs.find(tab => tab.id === selectedTabId);\n\n  return (\n    <>\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              data-cy=\"Tab\"\n              className={cn({\n                'is-active': selectedTabId === tab.id,\n              })}\n            >\n              <Link to={`/tabs/${tab.id}`}>\n                {tab.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n      {selectedTabId === 'tab-0' ? (\n        <p>Please select tab</p>\n      ) : (\n        <p>{isSelected?.content}</p>\n      )}\n    </>\n  );\n};\n","export const tabsfromserver = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { TabsList } from '../../components/TabsList/TabsList';\nimport { tabsfromserver } from '../../api/tabsfromserver';\n\nexport const TabsPage: React.FC = () => {\n  const { tabId = 'tab-0' } = useParams();\n\n  return (\n    <>\n      <h1 className=\"title\">Tabs page</h1>\n\n      <TabsList\n        tabs={tabsfromserver}\n        selectedTabId={tabId}\n      />\n    </>\n  );\n};\n","import 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport {\n  NavLink,\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport cn from 'classnames';\nimport { TabsPage } from './pages/TabsPage/TabsPage';\n\nexport const App: React.FC = () => {\n  return (\n    <>\n      {/* <html class=\"has-navbar-fixed-top\"> */}\n      <nav\n        className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n        data-cy=\"Nav\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              to=\"/\"\n              className={({ isActive }) => cn('navbar-item', {\n                'is-active': isActive,\n              })}\n            >\n              Home\n            </NavLink>\n            <NavLink\n              to=\"/tabs\"\n              className={({ isActive }) => cn('navbar-item', {\n                'is-active': isActive,\n              })}\n            >\n              Tabs\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route\n              path=\"/\"\n              element={<h1 className=\"title\">Home page</h1>}\n            />\n            <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"tabs\">\n              <Route index element={<TabsPage />} />\n              <Route path=\":tabId\" element={<TabsPage />} />\n            </Route>\n            <Route\n              path=\"*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n          </Routes>\n        </div>\n      </div>\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}